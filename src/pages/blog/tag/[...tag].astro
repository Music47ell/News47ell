---
import { getCollection } from 'astro:content'
import type { CollectionEntry } from 'astro:content'

import Link from '@/components/Link.astro'
import ViewsCounter from '@/components/ViewsCounter.astro'
import Newsletter from '@/components/Newsletter.astro'
import BaseLayout from '@/layouts/BaseLayout.astro'
import siteMetadata from '@/data/siteMetadata'

export async function getStaticPaths() {
	const blogs = (await getCollection('blog')) as CollectionEntry[];

  const tags = [...new Set(blogs.flatMap((blog) => blog.data.tags))];
	return tags.map((tag) => ({
		params: { tag: tag.replace(/\s+/g, '-') }
	}));
}

const { tag } = Astro.params;

const tagTitle = (await getCollection('blog'))
    .flatMap((blog) => blog.data.tags)
    .find((t) => t.replace(/\s+/g, '-').toLowerCase() === tag)

const blogs = (await getCollection('blog'))
  .sort((a, b) => b.data.published_at.getTime() - a.data.published_at.getTime())
  .filter((blog) => blog.data.tags.map((tag) => tag.replace(/\s+/g, '-').toLowerCase()).includes(tag));

---

<BaseLayout
	title={`Posts tagged with ${tagTitle}`}
	tagTitle={tagTitle}
	description={siteMetadata.description}
	type="website"
>
	<Newsletter />
	<main
		class="divide-y divide-purple-400 overflow-hidden rounded-xl border border-yellow-500 bg-stone-900"
	>
		{
			blogs.map((post) => (
				<div class="flex no-underline items-baseline justify-between gap-x-4 p-4 pt-5 max-sm:flex-col">
					<Link href={`/blog/${post.slug}`}>
						<p class="font-medium">{post.data.title}</p>
					</Link>
					<ViewsCounter slug={post.slug} trackViews={false} />
				</div>
			))
		}
	</main>
</BaseLayout>
